name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release: 
    types:
      - created

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always
  RUST_CHANNEL: stable

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Install Rust toolchain
      run: |
        rustup update --no-self-update ${{ env.RUST_CHANNEL }}
        rustup component add --toolchain ${{ env.RUST_CHANNEL }} rustfmt rust-src
        rustup default ${{ env.RUST_CHANNEL }}
    - name: Build
      run: cargo build
    - name: Run tests
      run: cargo test
  
  publish:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'created'

    steps:
    - uses: actions/checkout@v4
      with:
          fetch-depth: 0

    - name: Install MinGW
      run: sudo apt-get install gcc-mingw-w64

    - name: Install Rust toolchain
      run: |
        rustup update --no-self-update ${{ env.RUST_CHANNEL }}
        rustup component add --toolchain ${{ env.RUST_CHANNEL }} rustfmt rust-src
        rustup default ${{ env.RUST_CHANNEL }}

    - name: Build
      run: cargo build --release

    - name: Publish
      run: cargo publish --allow-dirty
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_TOKEN }}
        
    - name: Install GoReleaser and Create Release
      uses: goreleaser/goreleaser-action@v6
      if: startsWith(github.ref, 'refs/tags/')
      with:
        distribution: goreleaser
        version: "~> v2"
        args: release --clean
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}